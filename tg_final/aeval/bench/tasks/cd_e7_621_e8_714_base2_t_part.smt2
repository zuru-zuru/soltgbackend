; K = 2
; Transition relation
(define-fun T ((%init Bool) ($diff$0 Int) ($V22_speed$0 Int) ($V23_plus$0 Bool) ($V24_minus$0 Bool) ($OK$0 Bool) ($V25_realistic$0 Bool) ($V93_X$0 Bool) ($V98_Sofar$0 Bool) ($V109_cpt$0 Int) ($V110_acceptable$0 Bool) ($diff$1 Int) ($V22_speed$1 Int) ($V23_plus$1 Bool) ($V24_minus$1 Bool) ($OK$1 Bool) ($V25_realistic$1 Bool) ($V93_X$1 Bool) ($V98_Sofar$1 Bool) ($V109_cpt$1 Int) ($V110_acceptable$1 Bool)) Bool (and (= $OK$1 (=> $V98_Sofar$1 (ite %init true (<= $V109_cpt$0 7)))) (= $V25_realistic$1 (and (and (and (<= (- 0 4) $diff$1) (<= $diff$1 4)) (ite (ite %init true $V23_plus$0) (>= $diff$1 1) true)) (ite (ite %init false $V24_minus$0) (<= $diff$1 (- 0 1)) true))) (= $V93_X$1 (and (and $V25_realistic$1 (<= 0 $V22_speed$1)) (< $V22_speed$1 16))) (= $V98_Sofar$1 (ite %init $V93_X$1 (and $V93_X$1 $V98_Sofar$0))) (= $V109_cpt$1 (ite %init 0 (ite $V110_acceptable$1 0 (+ $V109_cpt$0 1)))) (= $V110_acceptable$1 (and (<= 8 $V22_speed$1) (<= $V22_speed$1 12)))))
; Universally quantified variables
(declare-fun $diff$~1 () Int)
(declare-fun $V22_speed$~1 () Int)
(declare-fun $V23_plus$~1 () Bool)
(declare-fun $V24_minus$~1 () Bool)
(declare-fun $OK$~1 () Bool)
(declare-fun $V25_realistic$~1 () Bool)
(declare-fun $V93_X$~1 () Bool)
(declare-fun $V98_Sofar$~1 () Bool)
(declare-fun $V109_cpt$~1 () Int)
(declare-fun $V110_acceptable$~1 () Bool)
(declare-fun $diff$0 () Int)
(declare-fun $V22_speed$0 () Int)
(declare-fun $V23_plus$0 () Bool)
(declare-fun $V24_minus$0 () Bool)
(declare-fun $OK$0 () Bool)
(declare-fun $V25_realistic$0 () Bool)
(declare-fun $V93_X$0 () Bool)
(declare-fun $V98_Sofar$0 () Bool)
(declare-fun $V109_cpt$0 () Int)
(declare-fun $V110_acceptable$0 () Bool)
(declare-fun $diff$1 () Int)
(declare-fun $V22_speed$3 () Int)
(declare-fun $V23_plus$3 () Bool)
(declare-fun $V24_minus$3 () Bool)
(declare-fun $OK$3 () Bool)
(declare-fun $V25_realistic$3 () Bool)
(declare-fun $V93_X$3 () Bool)
(declare-fun $V98_Sofar$3 () Bool)
(declare-fun $V109_cpt$3 () Int)
(declare-fun $V110_acceptable$3 () Bool)
(assert (and (T false $diff$0 $V22_speed$0 $V23_plus$0 $V24_minus$0 $OK$0 $V25_realistic$0 $V93_X$0 $V98_Sofar$0 $V109_cpt$0 $V110_acceptable$0 $diff$1 $V22_speed$3 $V23_plus$3 $V24_minus$3 $OK$3 $V25_realistic$3 $V93_X$3 $V98_Sofar$3 $V109_cpt$3 $V110_acceptable$3) $OK$3))
