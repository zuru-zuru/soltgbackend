(declare-fun $Sofar~0.X$2 () Bool)
(declare-fun $plus$2 () Bool)
(declare-fun $Property~0.speed$2 () Int)
(declare-fun $Sofar~0.Sofar$~1 () Bool)
(declare-fun $Environment~0.diff$2 () Int)
(declare-fun $Property~0.ok$2 () Bool)
(declare-fun $Sofar~0.Sofar$2 () Bool)
(declare-fun $Environment~0.minus$~1 () Bool)
(declare-fun $Environment~0.ok$2 () Bool)
(declare-fun $OK$2 () Bool)
(declare-fun $Property~0.acceptable$2 () Bool)
(declare-fun $Environment~0.plus$2 () Bool)
(declare-fun $realistic$2 () Bool)
(declare-fun $minus$2 () Bool)
(declare-fun $Property~0.cpt$~1 () Int)
(declare-fun $Environment~0.minus$2 () Bool)
(declare-fun $Environment~0.plus$~1 () Bool)
(declare-fun %init () Bool)
(declare-fun $Property~0.cpt$2 () Int)
(declare-fun $speed$2 () Int)
(declare-fun $diff$0 () Int)

(assert (let ((a!1 (or (not (<= (- 4) $diff$0))
               (not (<= $diff$0 4))
               (and (or %init $Environment~0.plus$~1) (not (>= $diff$0 1)))
               (and (not %init)
                    $Environment~0.minus$~1
                    (not (<= $diff$0 (- 1))))))
      (a!3 (and (ite (ite %init false $Environment~0.minus$~1)
                     (<= $diff$0 (- 0 1))
                     true)
                (ite (ite %init true $Environment~0.plus$~1)
                     (>= $diff$0 1)
                     true)
                (and (<= $diff$0 4) (<= (- 0 4) $diff$0))))
      (a!4 (and (ite (ite true false $Environment~0.minus$~1)
                     (<= $diff$0 (- 0 1))
                     true)
                (ite (ite true true $Environment~0.plus$~1) (>= $diff$0 1) true)
                (and (<= $diff$0 4) (<= (- 0 4) $diff$0))))
      (a!9 (and (<= (- 4) $diff$0)
                (<= $diff$0 4)
                (or (and (not %init) (not $Environment~0.plus$~1))
                    (>= $diff$0 1))
                (or %init (not $Environment~0.minus$~1) (<= $diff$0 (- 1)))
                (or %init (and (not %init) (= $Property~0.cpt$~1 (- 1))))))
      (a!14 (and (<= (- 4) $diff$0)
                 (<= $diff$0 4)
                 (or (and (not %init) (not $Environment~0.plus$~1))
                     (>= $diff$0 1))
                 (or %init (not $Environment~0.minus$~1) (<= $diff$0 (- 1)))
                 (or (and %init (= $Property~0.cpt$~1 (- 1))) (not %init)))))
(let ((a!2 (and a!1 (or %init (and (not %init) (= $Property~0.cpt$~1 (- 1))))))
      (a!5 (ite %init
                (and (< 13 16) a!4 (<= 0 13))
                (and (and (< 13 16) a!3 (<= 0 13)) $Sofar~0.Sofar$~1)))
      (a!7 (= $Sofar~0.X$2 (and (< 13 16) a!3 (<= 0 13))))
      (a!10 (ite %init
                 (and (< 16 16) a!4 (<= 0 16))
                 (and (and (< 16 16) a!3 (<= 0 16)) $Sofar~0.Sofar$~1)))
      (a!12 (= $Sofar~0.X$2 (and (< 16 16) a!3 (<= 0 16))))
      (a!16 (and a!1 (or (and %init (= $Property~0.cpt$~1 (- 1))) (not %init)))))
(let ((a!6 (= $OK$2 (or (ite %init true (<= $Property~0.cpt$~1 7)) (not a!5))))
      (a!11 (= $OK$2 (or (ite %init true (<= $Property~0.cpt$~1 7)) (not a!10)))))
(let ((a!8 (and (= $realistic$2 a!3)
                (= $Environment~0.ok$2 a!3)
                a!6
                (= $Sofar~0.Sofar$2 a!5)
                (= $Property~0.ok$2 (ite %init true (<= $Property~0.cpt$~1 7)))
                (= $Environment~0.diff$2 $diff$0)
                (= $Environment~0.plus$2 false)
                (= $plus$2 false)
                (= $Environment~0.minus$2 false)
                (= $minus$2 false)
                a!7
                (= $speed$2 13)
                (= $Property~0.speed$2 13)
                (= $Property~0.acceptable$2 false)
                (= $Property~0.cpt$2 0)))
      (a!13 (and (= $realistic$2 a!3)
                 (= $Environment~0.ok$2 a!3)
                 a!11
                 (= $Sofar~0.Sofar$2 a!10)
                 (= $Property~0.ok$2 (ite %init true (<= $Property~0.cpt$~1 7)))
                 (= $Environment~0.diff$2 $diff$0)
                 (= $Environment~0.plus$2 false)
                 (= $plus$2 false)
                 (= $Environment~0.minus$2 false)
                 (= $minus$2 false)
                 a!12
                 (= $speed$2 16)
                 (= $Property~0.speed$2 16)
                 (= $Property~0.acceptable$2 false)
                 (= $Property~0.cpt$2 0)))
      (a!15 (and (= $realistic$2 a!3)
                 (= $Environment~0.ok$2 a!3)
                 a!11
                 (= $Sofar~0.Sofar$2 a!10)
                 (= $Property~0.ok$2 (ite %init true (<= $Property~0.cpt$~1 7)))
                 (= $Environment~0.diff$2 $diff$0)
                 (= $Environment~0.plus$2 false)
                 (= $plus$2 false)
                 (= $Environment~0.minus$2 false)
                 (= $minus$2 false)
                 a!12
                 (= $speed$2 16)
                 (= $Property~0.speed$2 16)
                 (= $Property~0.acceptable$2 false)
                 (= $Property~0.cpt$2 (+ 1 $Property~0.cpt$~1))))
      (a!17 (and (= $realistic$2 a!3)
                 (= $Environment~0.ok$2 a!3)
                 a!6
                 (= $Sofar~0.Sofar$2 a!5)
                 (= $Property~0.ok$2 (ite %init true (<= $Property~0.cpt$~1 7)))
                 (= $Environment~0.diff$2 $diff$0)
                 (= $Environment~0.plus$2 false)
                 (= $plus$2 false)
                 (= $Environment~0.minus$2 false)
                 (= $minus$2 false)
                 a!7
                 (= $speed$2 13)
                 (= $Property~0.speed$2 13)
                 (= $Property~0.acceptable$2 false)
                 (= $Property~0.cpt$2 (+ 1 $Property~0.cpt$~1)))))
  (ite a!2 a!8 (ite a!9 a!13 (ite a!14 a!15 (ite a!16 a!17 true)))))))))
(check-sat)
